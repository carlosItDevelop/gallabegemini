<script>
    // Este log serve para confirmar que o ficheiro está a ser carregado pelo navegador.
    // Ele deve aparecer no console independentemente do jQuery.
    console.log("Script _scriptjs_dados_bancarios_cliente.cshtml carregado.");

    // A forma mais padrão e segura de executar código após o carregamento do jQuery.
    // Todo o nosso código que usa o símbolo '$' deve estar dentro desta função.
    $(function() {

        console.log("jQuery está pronto! Inicializando os eventos para Dados Bancários do Cliente.");

        // --- Funções e Variáveis para Dados Bancários do Cliente ---
        const offcanvasElement = document.getElementById('offcanvasDadosBancarios');
        const offcanvasInstance = offcanvasElement ? new bootstrap.Offcanvas(offcanvasElement) : null;
        const form = $('#dadosBancariosOffcanvasForm');
        const listContainerId = '#dados-bancarios-list-container';
        const clienteId = '@Model.Id';

        function showToast(message, type = 'success') {
            const bg = type === 'success' ? 'linear-gradient(to right, #00b09b, #96c93d)' : 'linear-gradient(to right, #ff5f6d, #ffc371)';
            Toastify({ text: message, duration: 3000, gravity: 'top', position: 'right', close: true, style: { background: bg } }).showToast();
        }

        function resetOffcanvasForm() {
            if (!form.length) return;
            form[0].reset();
            form.removeClass('was-validated');
            $('#dadosBancarios_Id').val('00000000-0000-0000-0000-000000000000');
            $('#dadosBancarios_PessoaId').val('@Model.PessoaId');
            $('#offcanvasFormErrors').text('');
            $('#btnExcluirDadosBancarios').hide();
            $('#offcanvasDadosBancariosLabel').text('Dados Bancários');
            $('#btnSalvarDadosBancarios').prop('disabled', false).html('<i class="ri-save-line align-bottom me-1"></i> Salvar');
        }

        // --- Event Listeners ---

        // Abrir Offcanvas para ADICIONAR
        $(document).on('click', '.add-dados-bancarios-btn', function () {
            if (!offcanvasInstance) return;
            resetOffcanvasForm();
            const pessoaId = $(this).data('pessoa-id');
            $('#dadosBancarios_PessoaId').val(pessoaId);
            $('#offcanvasDadosBancariosLabel').text('Adicionar Dados Bancários');
            offcanvasInstance.show();
        });

        // Abrir Offcanvas para EDITAR
        $(document).on('click', '.dados-bancarios-row', function () {
            console.clear();
            console.log("===================================");
            console.log("DIAGNÓSTICO - CLIQUE NA LINHA");

            const dadosBancariosId = $(this).data('id');
            const pessoaIdNaLinha = $(this).data('pessoa-id');

            console.log("ID do Agregado (data-id):", dadosBancariosId);
            console.log("ID da Pessoa (data-pessoa-id):", pessoaIdNaLinha);
            console.log("ID do Cliente (da página):", clienteId);
            console.log("===================================");

            if (!offcanvasInstance) return;

            resetOffcanvasForm();
            $('#offcanvasDadosBancariosLabel').text('Editar Dados Bancários');
            form.find('input, select').prop('disabled', true);

            $.ajax({
                url: '@Url.Action("GetDadosBancariosFormData", "Cliente")',
                type: 'GET',
                data: { dadosBancariosId: dadosBancariosId, clienteId: clienteId },
                success: function (data) {
                    if (data) {
                        $('#dadosBancarios_Id').val(data.id);
                        $('#dadosBancarios_PessoaId').val(data.pessoaId);
                        $('#dadosBancarios_Banco').val(data.banco);
                        $('#dadosBancarios_Agencia').val(data.agencia);
                        $('#dadosBancarios_Conta').val(data.conta);
                        $('#dadosBancarios_TipoDeContaBancaria').val(data.tipoDeContaBancaria);
                        $('#btnExcluirDadosBancarios').show();
                        offcanvasInstance.show();
                    } else {
                        showToast('Dados bancários não encontrados!', 'error');
                    }
                },
                error: function () {
                    showToast('Erro ao buscar dados bancários. Tente novamente!', 'error');
                },
                complete: function () {
                    form.find('input, select').prop('disabled', false);
                }
            });
        });

        // Submeter Formulário (SALVAR)
        form.on('submit', function (event) {
            event.preventDefault();
            if (this.checkValidity() === false) {
                event.stopPropagation();
                $(this).addClass('was-validated');
                return;
            }
            $(this).removeClass('was-validated');

            const formDataArray = $(this).serializeArray();
            formDataArray.push({ name: "clienteId", value: clienteId });
            const dataToSend = $.param(formDataArray);

            const url = '@Url.Action("SalvarDadosBancarios", "Cliente")';
            const btnSalvar = $('#btnSalvarDadosBancarios');
            btnSalvar.prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> Salvando...');

            $.ajax({
                url: url,
                type: 'POST',
                data: dataToSend,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    if (response.success) {
                        offcanvasInstance.hide();
                        refreshDadosBancariosList();
                        showToast('Dados bancários salvos com sucesso!', 'success');
                    } else {
                        displayServerErrors(response.errors);
                        showToast('Ocorreu um erro ao salvar.', 'error');
                    }
                },
                error: function () {
                    displayServerErrors("Erro de comunicação com o servidor.");
                    showToast('Ocorreu um erro ao salvar.', 'error');
                },
                complete: function () {
                    btnSalvar.prop('disabled', false).html('<i class="ri-save-line align-bottom me-1"></i> Salvar');
                }
            });
        });

        // EXCLUIR
        $(document).on('click', '#btnExcluirDadosBancarios', function () {
            const dadosBancariosId = $('#dadosBancarios_Id').val();
            if (!dadosBancariosId || dadosBancariosId === '00000000-0000-0000-0000-000000000000') {
                Swal.fire('Ops!', 'ID inválido para exclusão.', 'error');
                return;
            }
            Swal.fire({
                title: 'Tem certeza?',
                text: "Esta operação removerá permanentemente estes dados bancários.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sim, excluir!',
                cancelButtonText: 'Cancelar',
                customClass: { confirmButton: 'btn btn-danger', cancelButton: 'btn btn-secondary ms-2' },
                buttonsStyling: false
            }).then((result) => {
                if (!result.isConfirmed) return;

                const url = '@Url.Action("ExcluirDadosBancarios", "Cliente")';
                const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();
                const btnExcluir = $('#btnExcluirDadosBancarios');
                btnExcluir.prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> Excluindo...');

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: { clienteId: clienteId, dadosBancariosId: dadosBancariosId, __RequestVerificationToken: antiForgeryToken },
                    success: function (response) {
                        if (response.success) {
                            offcanvasInstance.hide();
                            refreshDadosBancariosList();
                            Swal.fire('Excluído!', 'Dados bancários removidos.', 'success');
                        } else {
                            Swal.fire('Erro!', (response.errors ?? ['Erro desconhecido']).join('<br>'), 'error');
                        }
                    },
                    error: function () { Swal.fire('Erro de Comunicação!', 'Não foi possível excluir os dados.', 'error'); },
                    complete: function () { btnExcluir.prop('disabled', false).html('<i class="ri-delete-bin-line align-bottom me-1"></i> Excluir'); }
                });
            });
        });

        // Limpar form ao fechar o offcanvas
        if(offcanvasElement) {
            offcanvasElement.addEventListener('hidden.bs.offcanvas', resetOffcanvasForm);
        }

        // --- Carregamento Inicial da Lista ---
        const tabLink = $('a[data-bs-toggle="tab"][href="#dados-bancarios"]');
        if (tabLink.hasClass('active')) {
            // A função refreshDadosBancariosList() precisa estar definida aqui ou antes
            //refreshDadosBancariosList(); // Descomente quando a função estiver no escopo
        }
        tabLink.on('shown.bs.tab', function (e) {
            //refreshDadosBancariosList(); // Descomente quando a função estiver no escopo
        });
    });
</script>