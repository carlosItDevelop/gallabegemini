<script>
    // Função que verifica se o jQuery está carregado.
    // Se não estiver, espera um curto período e tenta novamente.
    // Se estiver, executa a nossa função principal de inicialização.
    function waitForJQuery() {
        if (window.jQuery) {
            // jQuery está carregado, podemos executar o nosso código.
            initializeDadosBancariosScript(window.jQuery);
        } else {
            setTimeout(waitForJQuery, 50);
        }
    }

    // Função principal que contém toda a lógica do jQuery.
    // Recebe '$' como um argumento para garantir que está a usar o jQuery.
    function initializeDadosBancariosScript($) {

        // --- Funções e Variáveis para Dados Bancários do Fornecedor ---
        const offcanvasElement = document.getElementById('offcanvasDadosBancarios');
        const offcanvasInstance = offcanvasElement ? new bootstrap.Offcanvas(offcanvasElement) : null;
        const form = $('#dadosBancariosOffcanvasForm');
        const listContainerId = '#dados-bancarios-list-container';
        const fornecedorId = '@Model.Id';

        function showToast(message, type = 'success') {
            const bg = type === 'success' ? 'linear-gradient(to right, #00b09b, #96c93d)' : 'linear-gradient(to right, #ff5f6d, #ffc371)';
            Toastify({ text: message, duration: 3000, gravity: 'top', position: 'right', close: true, style: { background: bg } }).showToast();
        }

        function resetOffcanvasForm() {
            if (!form.length) return;
            form[0].reset();
            form.removeClass('was-validated');
            $('#dadosBancarios_Id').val('00000000-0000-0000-0000-000000000000');
            $('#dadosBancarios_PessoaId').val('@Model.PessoaId');
            $('#offcanvasFormErrors').text('');
            $('#btnExcluirDadosBancarios').hide();
            $('#offcanvasDadosBancariosLabel').text('Dados Bancários');
            $('#btnSalvarDadosBancarios').prop('disabled', false).html('<i class="ri-save-line align-bottom me-1"></i> Salvar');
        }

        function displayServerErrors(errors) {
            const errorContainer = $('#offcanvasFormErrors');
            errorContainer.text('');
            if (Array.isArray(errors) && errors.length > 0) {
                errorContainer.html(errors.join('<br>'));
            } else if (typeof errors === 'string') {
                errorContainer.text(errors);
            }
        }

        function refreshDadosBancariosList() {
            if (!fornecedorId || fornecedorId === '00000000-0000-0000-0000-000000000000') {
                return;
            }
            const url = '@Url.Action("GetDadosBancariosListPartial", "Fornecedor")?fornecedorId=' + fornecedorId;
            $(listContainerId).html('<div class="text-center p-3"><div class="spinner-border text-primary" role="status"></div></div>');

            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) { $(listContainerId).html(result); },
                error: function () {
                    showToast('Erro ao carregar a lista de dados bancários!', 'error');
                    $(listContainerId).html('<div class="alert alert-danger">Erro ao carregar os dados.</div>');
                }
            });
        }

        // --- Event Listeners ---
        // Usar 'document' para delegação torna os listeners mais robustos
        $(document).on('click', '.add-dados-bancarios-btn', function () {
            if (!offcanvasInstance) return;
            resetOffcanvasForm();
            $('#offcanvasDadosBancariosLabel').text('Adicionar Dados Bancários');
            offcanvasInstance.show();
        });

        $(document).on('click', '.dados-bancarios-row', function () {
            if (!offcanvasInstance) return;
            resetOffcanvasForm();
            const dadosBancariosId = $(this).data('id');
            $('#offcanvasDadosBancariosLabel').text('Editar Dados Bancários');
            form.find('input, select').prop('disabled', true);

            $.ajax({
                url: '@Url.Action("GetDadosBancariosFormData", "Fornecedor")',
                type: 'GET',
                data: { dadosBancariosId: dadosBancariosId, fornecedorId: fornecedorId },
                success: function (data) {
                    if (data) {
                        $('#dadosBancarios_Id').val(data.id);
                        $('#dadosBancarios_PessoaId').val(data.pessoaId);
                        $('#dadosBancarios_Banco').val(data.banco);
                        $('#dadosBancarios_Agencia').val(data.agencia);
                        $('#dadosBancarios_Conta').val(data.conta);
                        $('#dadosBancarios_TipoDeContaBancaria').val(data.tipoDeContaBancaria);
                        $('#btnExcluirDadosBancarios').show();
                        offcanvasInstance.show();
                    } else {
                        showToast('Dados bancários não encontrados!', 'error');
                    }
                },
                error: function () { showToast('Erro ao buscar dados bancários.', 'error'); },
                complete: function () { form.find('input, select').prop('disabled', false); }
            });
        });

        form.on('submit', function (event) {
            event.preventDefault();
            if (this.checkValidity() === false) {
                event.stopPropagation();
                $(this).addClass('was-validated');
                return;
            }
            $(this).removeClass('was-validated');

            const formDataArray = $(this).serializeArray();
            formDataArray.push({ name: "fornecedorId", value: fornecedorId });
            const dataToSend = $.param(formDataArray);

            const url = '@Url.Action("SalvarDadosBancarios", "Fornecedor")';
            const btnSalvar = $('#btnSalvarDadosBancarios');
            btnSalvar.prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> A Guardar...');

            $.ajax({
                url: url,
                type: 'POST',
                data: dataToSend,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    if (response.success) {
                        offcanvasInstance.hide();
                        refreshDadosBancariosList();
                        showToast('Dados bancários guardados com sucesso!', 'success');
                    } else {
                        displayServerErrors(response.errors);
                        showToast('Ocorreu um erro ao guardar.', 'error');
                    }
                },
                error: function () {
                    displayServerErrors("Erro de comunicação com o servidor.");
                    showToast('Ocorreu um erro ao guardar.', 'error');
                },
                complete: function () {
                    btnSalvar.prop('disabled', false).html('<i class="ri-save-line align-bottom me-1"></i> Salvar');
                }
            });
        });

        $('#btnExcluirDadosBancarios').on('click', function () {
            const dadosBancariosId = $('#dadosBancarios_Id').val();
            if (!dadosBancariosId || dadosBancariosId === '00000000-0000-0000-0000-000000000000') {
                Swal.fire('Ops!', 'ID inválido para exclusão.', 'error');
                return;
            }
            Swal.fire({
                title: 'Tem a certeza?',
                text: "Esta operação removerá permanentemente estes dados bancários.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sim, excluir!',
                cancelButtonText: 'Cancelar',
                customClass: { confirmButton: 'btn btn-danger', cancelButton: 'btn btn-secondary ms-2' },
                buttonsStyling: false
            }).then((result) => {
                if (!result.isConfirmed) return;

                const url = '@Url.Action("ExcluirDadosBancarios", "Fornecedor")';
                const antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();
                const btnExcluir = $('#btnExcluirDadosBancarios');
                btnExcluir.prop('disabled', true).html('<span class="spinner-border spinner-border-sm"></span> A Excluir...');

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: { fornecedorId: fornecedorId, dadosBancariosId: dadosBancariosId, __RequestVerificationToken: antiForgeryToken },
                    success: function (response) {
                        if (response.success) {
                            offcanvasInstance.hide();
                            refreshDadosBancariosList();
                            Swal.fire('Excluído!', 'Dados bancários removidos.', 'success');
                        } else {
                            Swal.fire('Erro!', (response.errors ?? ['Erro desconhecido']).join('<br>'), 'error');
                        }
                    },
                    error: function () { Swal.fire('Erro de Comunicação!', 'Não foi possível excluir os dados.', 'error'); },
                    complete: function () { btnExcluir.prop('disabled', false).html('<i class="ri-delete-bin-line align-bottom me-1"></i> Excluir'); }
                });
            });
        });

        if(offcanvasElement) {
            offcanvasElement.addEventListener('hidden.bs.offcanvas', resetOffcanvasForm);
        }

        // --- Carregamento Inicial da Lista ---
        const tabLink = $('a[data-bs-toggle="tab"][href="#dados-bancarios"]');
        if (tabLink.hasClass('active')) {
            refreshDadosBancariosList();
        }
        tabLink.on('shown.bs.tab', function (e) {
            refreshDadosBancariosList();
        });
    }

    // Inicia a verificação assim que o DOM estiver pronto.
    document.addEventListener("DOMContentLoaded", waitForJQuery);

</script>