@using GeneralLabSolutions.Domain.Enums
@model IEnumerable<VelzonModerna.ViewModels.ContatoViewModel>
@{
    var pessoaIdDoCliente = ViewData ["PessoaId"] ?? Guid.Empty;
}

<div class="card mb-3">
    <div class="card-header align-items-center d-flex">
        <h4 class="card-title mb-0 flex-grow-1">Contatos</h4>
        <div class="flex-shrink-0">
            <button type="button" class="btn btn-primary btn-sm add-contato-btn" @* Nova classe para JS *@
                    data-bs-toggle="offcanvas" data-bs-target="#offcanvasContato" @* Alvo do OffCanvas de Contato *@
                    aria-controls="offcanvasContato"
                    data-pessoa-id="@pessoaIdDoCliente">
                @* PessoaId do Cliente *@
                <i class="ri-add-line align-bottom me-1"></i> Adicionar Novo
            </button>
        </div>
    </div>
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped align-middle mb-0">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Email Principal</th>
                            <th>Telefone Principal</th>
                            <th>Tipo</th>
                            @* Sem coluna de ações, a linha é clicável *@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="clickable-row contato-row" @* Novas classes para JS/CSS *@
                                data-id="@item.Id" @* ID do Contato *@
                                data-pessoa-id="@item.PessoaId"
                                data-bs-toggle="offcanvas" data-bs-target="#offcanvasContato"
                                aria-controls="offcanvasContato"
                                title="Clique para ver detalhes ou editar">
                                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>@Html.DisplayFor(modelItem => item.Telefone)</td>
                                <td>@Html.DisplayFor(modelItem => item.TipoDeContato)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        } else
        {
            <div class="text-center py-3">
                <p class="text-muted mb-0">Nenhum contato cadastrado para este cliente.</p>
            </div>
        }
    </div><!-- end card-body -->
</div><!-- end card -->